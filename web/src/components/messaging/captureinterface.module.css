/* CaptureInterface Molecular Component Styles */

/* Main capture interface container */
.captureInterface {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1.5rem;
  border-radius: 12px;
  background: var(--background);
  border: 1px solid var(--border);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

/* State-based styling */
.captureInterface.idle {
  border-color: var(--border);
}

.captureInterface.ready {
  border-color: var(--accent);
  box-shadow: 0 0 0 2px var(--accent-light);
}

.captureInterface.capturing {
  border-color: var(--success);
  background: var(--success-light);
  animation: pulse 1.5s ease-in-out infinite;
}

.captureInterface.processing {
  border-color: var(--warning);
  background: var(--warning-light);
}

.captureInterface.success {
  border-color: var(--success);
  background: var(--success-light);
}

.captureInterface.error {
  border-color: var(--error);
  background: var(--error-light);
}

/* Mode-based styling */
.captureInterface.manual {
  /* Default styling */
}

.captureInterface.voice {
  border-left: 4px solid var(--accent);
}

.captureInterface.auto {
  border-left: 4px solid var(--success);
}

.captureInterface.timer {
  border-left: 4px solid var(--warning);
}

/* Disabled state */
.captureInterface.disabled {
  opacity: 0.6;
  pointer-events: none;
  filter: grayscale(50%);
}

/* Mode selector */
.modeSelector {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.modeLabel {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.25rem;
}

.modeButtons {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.modeButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border);
  border-radius: 8px;
  background: var(--background);
  color: var(--text-secondary);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.modeButton:hover {
  border-color: var(--accent);
  color: var(--text-primary);
  background: var(--accent-light);
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.modeButton:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

.modeButton:active {
  transform: translateY(0);
}

.modeButtonActive {
  border-color: var(--accent);
  background: var(--accent);
  color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.modeButtonActive:hover {
  background: var(--accent-dark);
  color: white;
}

.modeIcon {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

/* Capture area */
.captureArea {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  position: relative;
  padding: 2rem 1rem;
  border-radius: 12px;
  background: var(--background-secondary);
  border: 2px dashed var(--border);
  transition: all 0.3s ease;
}

.captureArea:hover {
  border-color: var(--accent);
  background: var(--accent-light);
}

/* Timer display overlay */
.timerDisplay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  z-index: 10;
  background: var(--background);
  padding: 2rem;
  border-radius: 50%;
  border: 4px solid var(--warning);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  animation: timerPulse 1s ease-in-out infinite;
}

.timerCount {
  font-size: 3rem;
  font-weight: 700;
  color: var(--warning);
  line-height: 1;
}

.timerLabel {
  font-size: 0.875rem;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Capture button */
.captureButton {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 4px solid var(--accent);
  background: var(--accent);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.captureButton:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.captureButton:active {
  transform: scale(0.95);
}

.captureButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.captureButton:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 4px;
}

/* Capture status */
.captureStatus {
  text-align: center;
  font-size: 0.875rem;
  color: var(--text-secondary);
  min-height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Controls panel */
.controlsPanel {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border);
}

/* Voice controls */
.voiceControls {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.voiceToggle {
  width: 40px;
  height: 40px;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.voiceStatus {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.voiceIndicator {
  font-size: 0.75rem;
  font-weight: 500;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  text-align: center;
  min-width: 80px;
  transition: all 0.2s ease;
}

.voiceIndicator.inactive {
  background: var(--background-secondary);
  color: var(--text-secondary);
}

.voiceIndicator.listening {
  background: var(--accent-light);
  color: var(--accent);
  animation: pulse 1.5s ease-in-out infinite;
}

.voiceIndicator.processing {
  background: var(--warning-light);
  color: var(--warning);
}

.voiceIndicator.recognized {
  background: var(--success-light);
  color: var(--success);
}

/* Advanced controls */
.advancedControls {
  display: flex;
  gap: 0.5rem;
}

.settingsButton {
  width: 40px;
  height: 40px;
  border-radius: 8px;
  transition: all 0.2s ease;
}

/* Animations */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

@keyframes timerPulse {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.1);
  }
}

/* Loading indicator */
.loadingIndicator {
  display: inline-block;
  margin-left: 0.5rem;
  animation: dots 1.5s infinite;
}

@keyframes dots {
  0%, 20% {
    color: transparent;
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  40% {
    color: currentColor;
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  60% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 transparent;
  }
  80%, 100% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 currentColor;
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .captureInterface {
    padding: 1rem;
    gap: 1rem;
  }

  .modeButtons {
    justify-content: center;
  }

  .modeButton {
    flex: 1;
    min-width: 0;
    justify-content: center;
  }

  .captureArea {
    padding: 1.5rem 0.5rem;
  }

  .captureButton {
    width: 70px;
    height: 70px;
  }

  .timerDisplay {
    padding: 1.5rem;
  }

  .timerCount {
    font-size: 2.5rem;
  }

  .controlsPanel {
    flex-direction: column;
    gap: 0.75rem;
    align-items: stretch;
  }

  .voiceControls {
    justify-content: center;
  }

  .advancedControls {
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .modeButtons {
    flex-direction: column;
  }

  .modeButton {
    width: 100%;
  }

  .voiceIndicator {
    min-width: 60px;
    font-size: 0.625rem;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .captureInterface {
    background: var(--background-dark, #1a1a1a);
    border-color: var(--border-dark, #333);
  }

  .modeButton {
    background: var(--background-secondary-dark, #2a2a2a);
    border-color: var(--border-dark, #333);
  }

  .captureArea {
    background: var(--background-secondary-dark, #2a2a2a);
    border-color: var(--border-dark, #333);
  }

  .timerDisplay {
    background: var(--background-dark, #1a1a1a);
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .captureInterface {
    border-width: 2px;
  }

  .modeButton {
    border-width: 2px;
  }

  .captureButton {
    border-width: 3px;
  }

  .timerDisplay {
    border-width: 3px;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .captureInterface,
  .modeButton,
  .captureButton,
  .voiceIndicator {
    transition: none;
    animation: none;
  }

  .timerDisplay {
    animation: none;
  }

  .loadingIndicator {
    animation: none;
  }

  .captureInterface.capturing {
    animation: none;
  }

  .voiceIndicator.listening {
    animation: none;
  }
}

/* Print styles */
@media print {
  .captureInterface {
    border: 1px solid black;
    box-shadow: none;
    page-break-inside: avoid;
  }

  .captureButton,
  .voiceToggle,
  .settingsButton {
    display: none;
  }
}

/* Focus management */
.captureInterface:focus-within {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
} 