/* CameraErrorHandler Molecular Component Styles */

/* Main error handler container */
.errorHandler {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1.5rem;
  border-radius: 12px;
  background: var(--background);
  border: 1px solid var(--border);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

/* Severity-based styling */
.errorHandler.low {
  border-left: 4px solid var(--info);
  background: var(--info-light);
}

.errorHandler.medium {
  border-left: 4px solid var(--warning);
  background: var(--warning-light);
}

.errorHandler.high {
  border-left: 4px solid var(--error);
  background: var(--error-light);
}

.errorHandler.critical {
  border-left: 4px solid var(--error);
  background: var(--error-light);
  box-shadow: 0 0 0 2px var(--error-light), 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  animation: criticalPulse 2s ease-in-out infinite;
}

/* Compact mode */
.errorHandler.compact {
  padding: 1rem;
  gap: 0.75rem;
}

/* Error header */
.errorHeader {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  position: relative;
}

.errorIcon {
  flex-shrink: 0;
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background: var(--error);
  color: white;
  font-size: 1.25rem;
}

.errorHandler.low .errorIcon {
  background: var(--info);
}

.errorHandler.medium .errorIcon {
  background: var(--warning);
}

.errorHandler.high .errorIcon {
  background: var(--error);
}

.errorHandler.critical .errorIcon {
  background: var(--error);
  animation: iconPulse 1.5s ease-in-out infinite;
}

.errorContent {
  flex: 1;
  min-width: 0;
}

.errorTitle {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 0.5rem 0;
  line-height: 1.4;
}

.errorMessage {
  font-size: 0.875rem;
  color: var(--text-secondary);
  margin: 0;
  line-height: 1.5;
}

/* Status indicator */
.statusIndicator {
  flex-shrink: 0;
  margin-left: auto;
}

.statusIcon {
  width: 1.5rem;
  height: 1.5rem;
}

/* Dismiss button */
.dismissButton {
  position: absolute;
  top: -0.5rem;
  right: -0.5rem;
  width: 2rem;
  height: 2rem;
  border: none;
  border-radius: 50%;
  background: var(--background);
  color: var(--text-secondary);
  font-size: 1.5rem;
  font-weight: 400;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.dismissButton:hover {
  background: var(--background-secondary);
  color: var(--text-primary);
  transform: scale(1.1);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.dismissButton:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

.dismissButton:active {
  transform: scale(0.95);
}

/* Error details */
.errorDetails {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  padding: 1rem;
  background: var(--background-secondary);
  border-radius: 8px;
  border: 1px solid var(--border);
}

.errorInfo {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 0.75rem;
  color: var(--text-secondary);
}

.errorType,
.errorCode,
.errorTime {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.errorType {
  color: var(--text-primary);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.retryInfo {
  padding: 0.5rem;
  background: var(--warning-light);
  border-radius: 4px;
  font-size: 0.75rem;
  color: var(--warning);
  text-align: center;
}

.maxRetriesWarning {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background: var(--error-light);
  border-radius: 4px;
  font-size: 0.75rem;
  color: var(--error);
}

.warningIcon {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

/* Recovery actions */
.recoveryActions {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.actionsTitle {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
}

.actionButtons {
  display: flex;
  gap: 0.75rem;
  flex-wrap: wrap;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border);
  border-radius: 8px;
  background: var(--background);
  color: var(--text-secondary);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
  text-decoration: none;
}

.actionButton:hover {
  border-color: var(--accent);
  color: var(--text-primary);
  background: var(--accent-light);
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.actionButton:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

.actionButton:active {
  transform: translateY(0);
}

.actionButton.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.actionButton.disabled:hover {
  border-color: var(--border);
  color: var(--text-secondary);
  background: var(--background);
  transform: none;
  box-shadow: none;
}

.primaryAction {
  border-color: var(--accent);
  background: var(--accent);
  color: white;
}

.primaryAction:hover {
  background: var(--accent-dark);
  border-color: var(--accent-dark);
  color: white;
}

.actionIcon {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

.loadingIndicator {
  display: inline-block;
  margin-left: 0.25rem;
  animation: dots 1.5s infinite;
}

/* Auto-retry indicator */
.autoRetryIndicator {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0.75rem;
  background: var(--info-light);
  border-radius: 8px;
  border: 1px solid var(--info);
  font-size: 0.75rem;
  color: var(--info);
  text-align: center;
}

.progressBar {
  width: 100%;
  height: 4px;
  background: var(--border);
  border-radius: 2px;
  overflow: hidden;
  position: relative;
}

.progressFill {
  height: 100%;
  background: var(--info);
  border-radius: 2px;
  animation: progressAnimation 2s linear infinite;
}

/* Animations */
@keyframes criticalPulse {
  0%, 100% {
    box-shadow: 0 0 0 2px var(--error-light), 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }
  50% {
    box-shadow: 0 0 0 4px var(--error-light), 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }
}

@keyframes iconPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes dots {
  0%, 20% {
    color: transparent;
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  40% {
    color: currentColor;
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  60% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 transparent;
  }
  80%, 100% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 currentColor;
  }
}

@keyframes progressAnimation {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .errorHandler {
    padding: 1rem;
    gap: 0.75rem;
  }

  .errorHeader {
    gap: 0.75rem;
  }

  .errorIcon {
    width: 2rem;
    height: 2rem;
    font-size: 1rem;
  }

  .errorTitle {
    font-size: 1rem;
  }

  .errorMessage {
    font-size: 0.8125rem;
  }

  .actionButtons {
    flex-direction: column;
    gap: 0.5rem;
  }

  .actionButton {
    justify-content: center;
    padding: 0.625rem 0.75rem;
  }

  .dismissButton {
    width: 1.75rem;
    height: 1.75rem;
    font-size: 1.25rem;
  }
}

@media (max-width: 480px) {
  .errorHandler.compact {
    padding: 0.75rem;
  }

  .errorHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .errorIcon {
    width: 1.75rem;
    height: 1.75rem;
    font-size: 0.875rem;
  }

  .statusIndicator {
    margin-left: 0;
    align-self: flex-start;
  }

  .dismissButton {
    position: relative;
    top: auto;
    right: auto;
    align-self: flex-end;
    margin-top: -1rem;
  }

  .errorDetails {
    padding: 0.75rem;
  }

  .errorInfo {
    font-size: 0.6875rem;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .errorHandler {
    background: var(--background-dark, #1a1a1a);
    border-color: var(--border-dark, #333);
  }

  .errorDetails {
    background: var(--background-secondary-dark, #2a2a2a);
    border-color: var(--border-dark, #333);
  }

  .actionButton {
    background: var(--background-secondary-dark, #2a2a2a);
    border-color: var(--border-dark, #333);
  }

  .dismissButton {
    background: var(--background-secondary-dark, #2a2a2a);
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .errorHandler {
    border-width: 2px;
  }

  .actionButton {
    border-width: 2px;
  }

  .errorIcon {
    border: 2px solid white;
  }

  .dismissButton {
    border: 1px solid var(--border);
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .errorHandler,
  .actionButton,
  .dismissButton {
    transition: none;
    animation: none;
  }

  .errorHandler.critical {
    animation: none;
  }

  .errorIcon {
    animation: none;
  }

  .loadingIndicator {
    animation: none;
  }

  .progressFill {
    animation: none;
  }
}

/* Print styles */
@media print {
  .errorHandler {
    border: 2px solid black;
    box-shadow: none;
    page-break-inside: avoid;
  }

  .actionButtons,
  .dismissButton {
    display: none;
  }

  .autoRetryIndicator {
    display: none;
  }
}

/* Focus management */
.errorHandler:focus-within {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
} 