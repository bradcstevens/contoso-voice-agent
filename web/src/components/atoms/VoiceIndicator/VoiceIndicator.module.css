/**
 * VOICE INDICATOR ATOM STYLES - ENHANCED VOICE ACTIVITY VISUALIZATION
 * 
 * Comprehensive voice indicator styles with multiple visualization modes,
 * real-time animations, accessibility features, and responsive design.
 */

.voiceIndicator {
  /* Base voice indicator styling */
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  
  /* Custom properties for dynamic styling */
  --voice-active-color: var(--multimodal-voice-active, #10b981);
  --voice-inactive-color: var(--color-neutral-300, #d4d4d8);
  --activity-level: 0%;
  --peak-level: 0%;
  --threshold: 10%;
  --segments: 5;
  --animation-speed: 1;
  
  /* Layout */
  overflow: hidden;
  
  /* Transitions */
  transition: all 200ms ease-out;
  
  /* Ensure proper layering */
  z-index: 1;
}

/* Size Variants */
.xs {
  width: var(--spacing-8, 2rem);
  height: var(--spacing-4, 1rem);
}

.sm {
  width: var(--spacing-12, 3rem);
  height: var(--spacing-5, 1.25rem);
}

.md {
  width: var(--spacing-16, 4rem);
  height: var(--spacing-6, 1.5rem);
}

.lg {
  width: var(--spacing-20, 5rem);
  height: var(--spacing-8, 2rem);
}

.xl {
  width: var(--spacing-24, 6rem);
  height: var(--spacing-10, 2.5rem);
}

/* Ring and Pulse modes use square dimensions */
.ring,
.pulse {
  aspect-ratio: 1;
  height: auto;
}

.ring.xs,
.pulse.xs {
  width: var(--spacing-8, 2rem);
}

.ring.sm,
.pulse.sm {
  width: var(--spacing-12, 3rem);
}

.ring.md,
.pulse.md {
  width: var(--spacing-16, 4rem);
}

.ring.lg,
.pulse.lg {
  width: var(--spacing-20, 5rem);
}

.ring.xl,
.pulse.xl {
  width: var(--spacing-24, 6rem);
}

/* Color Variants */
.default {
  --voice-active-color: var(--multimodal-voice-active, #10b981);
  --voice-inactive-color: var(--color-neutral-300, #d4d4d8);
}

.primary {
  --voice-active-color: var(--color-primary-500, #0ea5e9);
  --voice-inactive-color: var(--color-primary-200, #bae6fd);
}

.success {
  --voice-active-color: var(--color-semantic-success, #10b981);
  --voice-inactive-color: var(--color-green-200, #bbf7d0);
}

.warning {
  --voice-active-color: var(--color-semantic-warning, #f59e0b);
  --voice-inactive-color: var(--color-orange-200, #fed7aa);
}

.error {
  --voice-active-color: var(--color-semantic-error, #ef4444);
  --voice-inactive-color: var(--color-red-200, #fecaca);
}

/* Direction Variants */
.horizontal {
  flex-direction: row;
}

.vertical {
  flex-direction: column;
}

.radial {
  /* Applied to ring mode */
}

/* Active State */
.active {
  filter: drop-shadow(0 0 8px var(--voice-active-color));
}

/* Context-Specific Styling */
.microphone {
  border: 1px solid var(--voice-active-color);
  border-radius: var(--border-radius-md, 0.375rem);
  background: linear-gradient(45deg, transparent 0%, rgba(16, 185, 129, 0.05) 100%);
}

.speaker {
  border: 1px solid var(--color-blue-500, #3b82f6);
  border-radius: var(--border-radius-md, 0.375rem);
  background: linear-gradient(45deg, transparent 0%, rgba(59, 130, 246, 0.05) 100%);
}

/* Mirror Effect */
.mirror {
  transform: scaleX(-1);
}

/* ===========================
   BARS MODE
   ========================= */

.bars .segmentsContainer {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  gap: var(--spacing-1, 0.25rem);
  width: 100%;
  height: 100%;
}

.vertical .segmentsContainer {
  flex-direction: row;
  align-items: flex-end;
}

.horizontal .segmentsContainer {
  flex-direction: column;
  align-items: flex-start;
}

.bars .segment {
  background-color: var(--voice-inactive-color);
  border-radius: var(--border-radius-sm, 0.125rem);
  transition: all calc(100ms / var(--animation-speed, 1)) ease-out;
  flex: 1;
  min-width: 2px;
  min-height: 2px;
}

.vertical .bars .segment {
  height: calc(20% + (var(--segment-index) * 16%));
  width: 100%;
}

.horizontal .bars .segment {
  width: calc(20% + (var(--segment-index) * 16%));
  height: 100%;
}

.bars .activeSegment {
  background-color: var(--voice-active-color);
  opacity: var(--segment-intensity, 1);
  transform: scale(1.05);
  filter: brightness(1.1);
}

/* ===========================
   DOTS MODE
   ========================= */

.dots .segmentsContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2, 0.5rem);
  width: 100%;
  height: 100%;
}

.dots .segment {
  width: var(--spacing-2, 0.5rem);
  height: var(--spacing-2, 0.5rem);
  background-color: var(--voice-inactive-color);
  border-radius: var(--border-radius-full, 9999px);
  transition: all calc(100ms / var(--animation-speed, 1)) ease-out;
}

.dots .activeSegment {
  background-color: var(--voice-active-color);
  opacity: var(--segment-intensity, 1);
  transform: scale(calc(1 + var(--segment-intensity, 0) * 0.5));
  box-shadow: 0 0 calc(var(--segment-intensity, 0) * 8px) var(--voice-active-color);
}

/* ===========================
   WAVE MODE
   ========================= */

.wave {
  position: relative;
  width: 100%;
  height: 100%;
}

.waveSvg {
  width: 100%;
  height: 100%;
}

.wavePath {
  stroke: var(--voice-active-color);
  stroke-linecap: round;
  stroke-linejoin: round;
  opacity: 0.8;
  filter: drop-shadow(0 0 2px var(--voice-active-color));
  animation: waveFlow calc(2s / var(--animation-speed, 1)) ease-in-out infinite;
}

.peakLine {
  stroke: var(--voice-active-color);
  opacity: 0.6;
  stroke-dasharray: 2, 2;
  animation: peakFade calc(1s / var(--animation-speed, 1)) ease-out forwards;
}

@keyframes waveFlow {
  0%, 100% {
    filter: drop-shadow(0 0 2px var(--voice-active-color));
  }
  50% {
    filter: drop-shadow(0 0 6px var(--voice-active-color));
  }
}

@keyframes peakFade {
  0% {
    opacity: 0.8;
  }
  100% {
    opacity: 0.3;
  }
}

/* ===========================
   RING MODE
   ========================= */

.ring {
  position: relative;
  width: 100%;
  height: 100%;
}

.ringSvg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

.ringTrack {
  stroke: var(--voice-inactive-color);
  stroke-linecap: round;
}

.ringProgress {
  stroke: var(--voice-active-color);
  stroke-linecap: round;
  transition: stroke-dashoffset calc(200ms / var(--animation-speed, 1)) ease-out;
  filter: drop-shadow(0 0 4px var(--voice-active-color));
}

.ringPeak {
  stroke: var(--voice-active-color);
  stroke-linecap: round;
  opacity: 0.6;
  stroke-width: 2;
  animation: ringPeakFade calc(1s / var(--animation-speed, 1)) ease-out forwards;
}

@keyframes ringPeakFade {
  0% {
    opacity: 0.8;
    stroke-width: 3;
  }
  100% {
    opacity: 0.3;
    stroke-width: 1;
  }
}

/* ===========================
   PULSE MODE
   ========================= */

.pulse {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pulseCircle {
  width: 60%;
  height: 60%;
  background: radial-gradient(
    circle,
    var(--voice-active-color) 0%,
    transparent 70%
  );
  border-radius: var(--border-radius-full, 9999px);
  opacity: var(--pulse-intensity, 0);
  animation: pulseAnimation calc(1s / var(--animation-speed, 1)) ease-in-out infinite;
  transform: scale(var(--pulse-intensity, 0));
}

@keyframes pulseAnimation {
  0%, 100% {
    transform: scale(var(--pulse-intensity, 0));
    opacity: var(--pulse-intensity, 0);
  }
  50% {
    transform: scale(calc(var(--pulse-intensity, 0) * 1.2));
    opacity: calc(var(--pulse-intensity, 0) * 0.8);
  }
}

/* ===========================
   VALUE DISPLAY
   ========================= */

.valueDisplay {
  position: absolute;
  bottom: -var(--spacing-5, 1.25rem);
  left: 50%;
  transform: translateX(-50%);
  font-size: var(--font-size-xs, 0.75rem);
  font-weight: var(--font-weight-medium, 500);
  color: var(--voice-active-color);
  background: var(--color-white, #ffffff);
  padding: var(--spacing-1, 0.25rem) var(--spacing-2, 0.5rem);
  border-radius: var(--border-radius-sm, 0.125rem);
  border: 1px solid var(--voice-inactive-color);
  white-space: nowrap;
  pointer-events: none;
  z-index: 2;
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  .voiceIndicator {
    filter: contrast(1.3);
  }
  
  .segment,
  .wavePath,
  .ringProgress {
    stroke-width: 3px;
  }
  
  .valueDisplay {
    border-width: 2px;
    font-weight: var(--font-weight-bold, 700);
  }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .voiceIndicator *,
  .voiceIndicator::before,
  .voiceIndicator::after {
    animation: none !important;
    transition: none !important;
  }
  
  .segment {
    transition: opacity 0.1s ease-out;
  }
  
  /* Provide alternative feedback */
  .active::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border: 2px solid var(--voice-active-color);
    border-radius: inherit;
    opacity: 0.6;
  }
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
  .default {
    --voice-inactive-color: var(--color-neutral-600, #52525b);
  }
  
  .valueDisplay {
    background: var(--color-neutral-800, #27272a);
    color: var(--color-neutral-200, #e4e4e7);
  }
  
  .microphone {
    background: linear-gradient(45deg, transparent 0%, rgba(16, 185, 129, 0.02) 100%);
  }
  
  .speaker {
    background: linear-gradient(45deg, transparent 0%, rgba(59, 130, 246, 0.02) 100%);
  }
}

/* Print Styles */
@media print {
  .voiceIndicator {
    filter: none !important;
    animation: none !important;
    transition: none !important;
  }
  
  .voiceIndicator * {
    animation: none !important;
    transition: none !important;
  }
  
  .segment {
    background: black !important;
  }
  
  .wavePath,
  .ringProgress {
    stroke: black !important;
  }
  
  .valueDisplay {
    background: white !important;
    color: black !important;
    border: 1px solid black !important;
  }
}

/* Mobile Touch Optimization */
@media (hover: none) and (pointer: coarse) {
  .voiceIndicator {
    /* Ensure adequate touch target if interactive */
    min-height: var(--camera-touch-target, 44px);
  }
  
  .valueDisplay {
    font-size: var(--font-size-sm, 0.875rem);
    padding: var(--spacing-2, 0.5rem) var(--spacing-3, 0.75rem);
  }
}

/* Responsive Size Adjustments */
@media (max-width: 640px) {
  .xl {
    width: var(--spacing-20, 5rem);
    height: var(--spacing-8, 2rem);
  }
  
  .lg {
    width: var(--spacing-16, 4rem);
    height: var(--spacing-6, 1.5rem);
  }
  
  .ring.xl,
  .pulse.xl {
    width: var(--spacing-20, 5rem);
  }
  
  .ring.lg,
  .pulse.lg {
    width: var(--spacing-16, 4rem);
  }
}

/* Performance Optimizations */
.voiceIndicator {
  /* Promote to GPU layer for smooth animations */
  will-change: transform;
  transform: translateZ(0);
}

.segment {
  /* Optimize segment animations */
  will-change: transform, opacity, background-color;
  transform: translateZ(0);
}

.wavePath,
.ringProgress {
  /* Optimize SVG animations */
  will-change: stroke-dashoffset;
}

/* Enhanced accessibility for screen readers */
.voiceIndicator[aria-live="polite"] {
  /* Voice activity announcements */
}

.voiceIndicator[role="progressbar"] {
  /* Progress bar semantics */
}

/* Threshold indicator */
.voiceIndicator::before {
  content: '';
  position: absolute;
  background: rgba(255, 255, 255, 0.3);
  pointer-events: none;
  opacity: 0;
  transition: opacity 200ms ease-out;
}

.bars.voiceIndicator::before {
  width: 1px;
  height: calc(var(--threshold) * 1%);
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}

.ring.voiceIndicator::before {
  display: none; /* Ring mode doesn't show threshold line */
}

.voiceIndicator[data-show-threshold="true"]::before {
  opacity: 1;
}

/* Custom color support */
.voiceIndicator[style*="--voice-active-color"] {
  /* Custom active color support */
}

.voiceIndicator[style*="--voice-inactive-color"] {
  /* Custom inactive color support */
}

/* Activity level styling */
.voiceIndicator[data-activity="low"] {
  opacity: 0.7;
}

.voiceIndicator[data-activity="medium"] {
  opacity: 0.85;
}

.voiceIndicator[data-activity="high"] {
  opacity: 1;
  filter: drop-shadow(0 0 6px var(--voice-active-color));
}
