/**
 * SPINNER ATOM STYLES - ENHANCED DESIGN SYSTEM
 * 
 * Comprehensive spinner styles with design tokens, animation types,
 * accessibility features, and multi-modal support for loading indicators.
 */

.spinner {
  /* Base spinner styling */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  
  /* Custom properties for dynamic styling */
  --spinner-color: currentColor;
  --track-color: rgba(0, 0, 0, 0.1);
  --thickness: 2px;
  --progress: 0%;
  
  /* Color */
  color: var(--color-primary-500, #0ea5e9);
  
  /* Ensure proper layering */
  z-index: 1;
}

/* Size Variants */
.xs {
  width: var(--spacing-4, 1rem);
  height: var(--spacing-4, 1rem);
}

.sm {
  width: var(--spacing-5, 1.25rem);
  height: var(--spacing-5, 1.25rem);
}

.md {
  width: var(--spacing-6, 1.5rem);
  height: var(--spacing-6, 1.5rem);
}

.lg {
  width: var(--spacing-8, 2rem);
  height: var(--spacing-8, 2rem);
}

.xl {
  width: var(--spacing-12, 3rem);
  height: var(--spacing-12, 3rem);
}

/* Color Variants */
.default {
  color: var(--color-neutral-500, #71717a);
}

.primary {
  color: var(--color-primary-500, #0ea5e9);
}

.secondary {
  color: var(--color-neutral-600, #52525b);
}

.success {
  color: var(--color-semantic-success, #10b981);
}

.warning {
  color: var(--color-semantic-warning, #f59e0b);
}

.error {
  color: var(--color-semantic-error, #ef4444);
}

.white {
  color: var(--color-white, #ffffff);
}

/* Multi-Modal Context Variants */
.voice {
  color: var(--multimodal-voice-active, #10b981);
}

.camera {
  color: var(--multimodal-camera-active, #0ea5e9);
}

.text {
  color: var(--multimodal-text-active, #71717a);
}

.multimodal {
  background: linear-gradient(
    135deg,
    var(--multimodal-voice-active, #10b981) 0%,
    var(--multimodal-camera-active, #0ea5e9) 50%,
    var(--multimodal-coordination, #ec4899) 100%
  );
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  background-size: 200% 200%;
  animation: multimodalGradient 3s ease infinite;
}

@keyframes multimodalGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Speed Variants */
.slow {
  --animation-speed: 2s;
}

.normal {
  --animation-speed: 1s;
}

.fast {
  --animation-speed: 0.6s;
}

/* Centered Positioning */
.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Background Process Styling */
.background {
  opacity: 0.6;
}

/* Progress Indicator Styling */
.progress {
  flex-direction: column;
  gap: var(--spacing-2, 0.5rem);
}

.progressText {
  font-size: var(--font-size-xs, 0.75rem);
  font-weight: var(--font-weight-medium, 500);
  color: currentColor;
  line-height: 1;
}

.description {
  font-size: var(--font-size-sm, 0.875rem);
  color: var(--color-neutral-600, #52525b);
  text-align: center;
  margin-top: var(--spacing-2, 0.5rem);
}

/* === CIRCLE SPINNER === */
.circle .svg {
  width: 100%;
  height: 100%;
  animation: rotate var(--animation-speed, 1s) linear infinite;
}

.circle .track {
  stroke: var(--track-color);
  opacity: 0.3;
}

.circle .path {
  stroke: var(--spinner-color, currentColor);
  stroke-linecap: round;
  animation: circleDash calc(var(--animation-speed, 1s) * 1.5) ease-in-out infinite;
}

.circle.progress .path {
  animation: none;
  transition: stroke-dashoffset 0.3s ease;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes circleDash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -124;
  }
}

/* === RING SPINNER === */
.ring .svg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

.ring .track {
  stroke: var(--track-color);
  opacity: 0.3;
}

.ring .path {
  stroke: var(--spinner-color, currentColor);
  stroke-linecap: round;
  transition: stroke-dashoffset 0.3s ease;
}

/* === DOTS SPINNER === */
.dots .dotsContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 25%;
  width: 100%;
  height: 100%;
}

.dots .dot {
  width: 20%;
  height: 20%;
  background-color: var(--spinner-color, currentColor);
  border-radius: var(--border-radius-full, 9999px);
  animation: dotBounce var(--animation-speed, 1s) ease-in-out infinite;
}

@keyframes dotBounce {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1.2);
    opacity: 1;
  }
}

/* === BARS SPINNER === */
.bars .barsContainer {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  gap: 15%;
  width: 100%;
  height: 100%;
}

.bars .bar {
  width: 12%;
  background-color: var(--spinner-color, currentColor);
  border-radius: var(--border-radius-sm, 0.125rem);
  animation: barStretch var(--animation-speed, 1s) ease-in-out infinite;
}

@keyframes barStretch {
  0%, 40%, 100% {
    height: 20%;
  }
  20% {
    height: 100%;
  }
}

/* === PULSE SPINNER === */
.pulse .pulseCircle {
  width: 100%;
  height: 100%;
  background-color: var(--spinner-color, currentColor);
  border-radius: var(--border-radius-full, 9999px);
  animation: pulseScale var(--animation-speed, 1s) ease-in-out infinite;
}

@keyframes pulseScale {
  0%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
}

/* === BOUNCE SPINNER === */
.bounce .bounceContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 20%;
  width: 100%;
  height: 100%;
}

.bounce .bounce {
  width: 20%;
  height: 20%;
  background-color: var(--spinner-color, currentColor);
  border-radius: var(--border-radius-full, 9999px);
  animation: bounceMotion calc(var(--animation-speed, 1s) * 1.4) ease-in-out infinite;
}

@keyframes bounceMotion {
  0%, 80%, 100% {
    transform: translateY(0) scale(0.8);
    opacity: 0.7;
  }
  40% {
    transform: translateY(-100%) scale(1);
    opacity: 1;
  }
}

/* Reduced Motion Support */
.reduceMotion,
.spinner:where([data-reduce-motion="true"]) {
  --animation-speed: 0s;
}

@media (prefers-reduced-motion: reduce) {
  .spinner:not(.progress) {
    animation: none !important;
  }
  
  .spinner:not(.progress) * {
    animation: none !important;
  }
  
  .multimodal {
    animation: none;
    background: var(--multimodal-coordination, #ec4899);
    background-clip: initial;
    -webkit-background-clip: initial;
    color: var(--multimodal-coordination, #ec4899);
  }
  
  /* Show alternative loading indication */
  .spinner:not(.progress)::after {
    content: '●●●';
    font-size: 0.5em;
    letter-spacing: 0.1em;
    animation: dotFlash 1.5s ease-in-out infinite;
  }
  
  @keyframes dotFlash {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 1; }
  }
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  .spinner {
    filter: contrast(1.5);
  }
  
  .track {
    opacity: 0.6 !important;
  }
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
  .default {
    color: var(--color-neutral-400, #a1a1aa);
  }
  
  .secondary {
    color: var(--color-neutral-300, #d4d4d8);
  }
  
  .description {
    color: var(--color-neutral-400, #a1a1aa);
  }
  
  .spinner {
    --track-color: rgba(255, 255, 255, 0.1);
  }
}

/* Print Styles */
@media print {
  .spinner {
    display: none !important;
  }
  
  .spinner::after {
    content: '[Loading...]' !important;
    display: inline-block !important;
    color: black !important;
    font-size: 1em !important;
    animation: none !important;
  }
}

/* Mobile Touch Optimization */
@media (hover: none) and (pointer: coarse) {
  .xl {
    /* Ensure minimum touch target on mobile */
    min-width: var(--camera-touch-target, 44px);
    min-height: var(--camera-touch-target, 44px);
  }
}

/* Responsive Size Adjustments */
@media (max-width: 640px) {
  .xl {
    width: var(--spacing-8, 2rem);
    height: var(--spacing-8, 2rem);
  }
  
  .lg {
    width: var(--spacing-6, 1.5rem);
    height: var(--spacing-6, 1.5rem);
  }
}

/* Performance Optimizations */
.spinner {
  /* Promote to GPU layer for smooth animations */
  will-change: transform;
  transform: translateZ(0);
}

.svg {
  /* Optimize SVG rendering */
  shape-rendering: geometricPrecision;
}

/* Screen Reader Optimizations */
.spinner[aria-live="polite"] {
  /* Ensure progress announcements are made */
}

.spinner[aria-busy="true"] {
  /* Loading state announcement */
}

/* Loading States for Complex Scenarios */
.spinner.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.8);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (prefers-color-scheme: dark) {
  .spinner.overlay {
    background-color: rgba(0, 0, 0, 0.8);
  }
}

/* Custom Color Support */
.spinner[style*="--spinner-color"] {
  color: var(--spinner-color);
}

/* Enhanced Visual Hierarchy */
.spinner:focus-visible {
  outline: var(--accessibility-focus-width, 2px) solid var(--accessibility-focus-color, #0ea5e9);
  outline-offset: var(--accessibility-focus-offset, 2px);
  border-radius: var(--border-radius-sm, 0.125rem);
}
