/**
 * GESTURE AREA ATOM STYLES - MOBILE TOUCH GESTURE RECOGNITION WITH DESKTOP ENHANCEMENTS
 * 
 * Comprehensive gesture area styles with touch interaction support,
 * visual feedback, gesture zones, accessibility features, and enhanced
 * desktop interactions including mouse wheel zoom, drag to pan, and context menus.
 */

.gestureArea {
  /* Base gesture area styling */
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  
  /* Touch optimization */
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  
  /* Interaction */
  cursor: pointer;
  
  /* Transitions */
  transition: all var(--camera-transition-fast, 150ms) ease-out;
  
  /* Performance optimization */
  will-change: transform, opacity;
  transform: translateZ(0);
  
  /* Accessibility */
  outline: none;
  
  /* Background */
  background: transparent;
  
  /* Overflow management */
  overflow: hidden;
}

/* Desktop Enhancement Base Styles (NEW) */
.gestureArea.desktopEnhanced {
  /* Enhanced desktop precision */
  cursor: crosshair;
  
  /* Desktop interaction feedback */
  transition: all var(--camera-transition-fast, 150ms) cubic-bezier(0.4, 0, 0.2, 1);
  
  /* Desktop-specific overflow */
  overflow: auto;
  
  /* Desktop scrollbar styling */
  scrollbar-width: thin;
  scrollbar-color: rgba(0, 0, 0, 0.3) transparent;
}

.gestureArea.desktopEnhanced::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.gestureArea.desktopEnhanced::-webkit-scrollbar-track {
  background: transparent;
}

.gestureArea.desktopEnhanced::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  border: 2px solid transparent;
  background-clip: content-box;
}

.gestureArea.desktopEnhanced::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.5);
  background-clip: content-box;
}

/* Desktop Mode Variants (NEW) */
.gestureArea.desktopStandard {
  cursor: default;
}

.gestureArea.desktopProfessional {
  cursor: crosshair;
  background: linear-gradient(
    45deg,
    transparent 49%,
    rgba(14, 165, 233, 0.1) 49%,
    rgba(14, 165, 233, 0.1) 51%,
    transparent 51%
  );
  background-size: 20px 20px;
}

.gestureArea.desktopGaming {
  cursor: crosshair;
  background: radial-gradient(circle at 50% 50%, rgba(124, 58, 237, 0.05) 0%, transparent 70%);
  animation: gamingPulse 3s ease-in-out infinite;
}

.gestureArea.desktopPrecision {
  cursor: crosshair;
  background: 
    linear-gradient(to right, rgba(14, 165, 233, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(14, 165, 233, 0.1) 1px, transparent 1px);
  background-size: var(--grid-size, 20px) var(--grid-size, 20px);
}

/* Desktop States (NEW) */
.gestureArea.desktopEnhanced:focus-visible {
  outline: 2px solid var(--color-primary-500, #0ea5e9);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(14, 165, 233, 0.2);
}

.gestureArea.dragging {
  cursor: grabbing !important;
}

.gestureArea.keyboardFocused {
  outline: 2px solid var(--color-primary-500, #0ea5e9);
  outline-offset: 2px;
}

/* Precision Mode Styles (NEW) */
.gestureArea.precisionMode {
  position: relative;
}

.gestureArea.showGrid {
  background: 
    linear-gradient(to right, rgba(14, 165, 233, 0.15) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(14, 165, 233, 0.15) 1px, transparent 1px);
  background-size: var(--grid-size, 20px) var(--grid-size, 20px);
}

.precisionGrid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  
  background: 
    linear-gradient(to right, rgba(14, 165, 233, 0.2) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(14, 165, 233, 0.2) 1px, transparent 1px);
  background-size: var(--grid-size, 20px) var(--grid-size, 20px);
  
  opacity: 0;
  animation: gridFadeIn 0.3s ease-out forwards;
}

@keyframes gridFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Desktop Context Menu (NEW) */
.contextMenu {
  position: absolute;
  background: var(--color-white, #ffffff);
  border: 1px solid var(--color-gray-300, #d1d5db);
  border-radius: var(--border-radius-lg, 12px);
  box-shadow: 
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05),
    0 0 0 1px rgba(0, 0, 0, 0.05);
  
  min-width: 180px;
  max-width: 280px;
  
  padding: 8px 0;
  z-index: 1000;
  
  /* Backdrop blur for modern browsers */
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  
  /* Animation */
  opacity: 0;
  transform: scale(0.95) translateY(-8px);
  animation: contextMenuFadeIn 0.15s ease-out forwards;
}

@keyframes contextMenuFadeIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-8px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.contextMenuItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 10px 16px;
  
  background: transparent;
  border: none;
  
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-medium, 500);
  color: var(--color-gray-700, #374151);
  text-align: left;
  
  cursor: pointer;
  transition: background-color var(--camera-transition-fast, 150ms) ease-out;
  
  /* Remove default button styles */
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.contextMenuItem:hover {
  background: var(--color-gray-50, #f9fafb);
}

.contextMenuItem:focus-visible {
  background: var(--color-primary-50, #eff6ff);
  outline: 2px solid var(--color-primary-500, #0ea5e9);
  outline-offset: -2px;
}

.contextMenuItem:active {
  background: var(--color-primary-100, #dbeafe);
}

.contextMenuLabel {
  flex: 1;
  color: var(--color-gray-900, #111827);
}

.contextMenuShortcut {
  font-size: var(--font-size-xs, 12px);
  color: var(--color-gray-500, #6b7280);
  font-weight: var(--font-weight-normal, 400);
  font-family: var(--font-family-mono, ui-monospace, monospace);
  
  background: var(--color-gray-100, #f3f4f6);
  padding: 2px 6px;
  border-radius: var(--border-radius-sm, 4px);
  border: 1px solid var(--color-gray-200, #e5e7eb);
}

/* Desktop Zoom Indicator (NEW) */
.zoomIndicator {
  position: absolute;
  top: 16px;
  right: 16px;
  
  background: rgba(0, 0, 0, 0.8);
  color: var(--color-white, #ffffff);
  padding: 6px 12px;
  border-radius: var(--border-radius-md, 8px);
  
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-semibold, 600);
  font-family: var(--font-family-mono, ui-monospace, monospace);
  
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  
  z-index: 10;
  pointer-events: none;
  
  opacity: 0;
  transform: translateX(20px);
  animation: zoomIndicatorFadeIn 0.2s ease-out forwards;
}

@keyframes zoomIndicatorFadeIn {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Gesture Visual Feedback */
.gestureArea.visualFeedback {
  position: relative;
}

.gestureIndicator {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  
  background: rgba(0, 0, 0, 0.8);
  color: var(--color-white, #ffffff);
  padding: 12px 16px;
  border-radius: var(--border-radius-lg, 12px);
  
  display: flex;
  align-items: center;
  gap: 8px;
  
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-medium, 500);
  
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  
  z-index: 5;
  pointer-events: none;
  
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.9);
  animation: gestureIndicatorFadeIn 0.2s ease-out forwards;
}

@keyframes gestureIndicatorFadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.gestureIndicatorIcon {
  font-size: var(--font-size-lg, 18px);
  line-height: 1;
}

.gestureIndicatorText {
  text-transform: capitalize;
  white-space: nowrap;
}

/* Gesture State Styles */
.gestureTap {
  /* Visual feedback for tap gesture */
  position: relative;
}

.gestureTap::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 40px;
  background: rgba(14, 165, 233, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: tapRipple 0.3s ease-out forwards;
  pointer-events: none;
  z-index: 2;
}

@keyframes tapRipple {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(2);
    opacity: 0;
  }
}

.gestureDoubletap {
  /* Visual feedback for double tap gesture */
  position: relative;
}

.gestureDoubletap::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60px;
  height: 60px;
  background: rgba(14, 165, 233, 0.4);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: doubleTapRipple 0.4s ease-out forwards;
  pointer-events: none;
  z-index: 2;
}

@keyframes doubleTapRipple {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(2.5);
    opacity: 0;
  }
}

.gestureLongpress {
  /* Visual feedback for long press gesture */
  background: radial-gradient(circle at center, rgba(14, 165, 233, 0.1) 0%, transparent 70%);
  animation: longPressGlow 0.5s ease-out forwards;
}

@keyframes longPressGlow {
  0% {
    background: radial-gradient(circle at center, rgba(14, 165, 233, 0.1) 0%, transparent 70%);
  }
  100% {
    background: radial-gradient(circle at center, rgba(14, 165, 233, 0.2) 0%, transparent 70%);
  }
}

.gesturePinch {
  /* Visual feedback for pinch gesture */
  transform: scale(var(--zoom-level, 1));
  transition: transform var(--camera-transition-fast, 150ms) ease-out;
}

.gestureSwipe {
  /* Visual feedback for swipe gesture */
  position: relative;
  overflow: hidden;
}

.gestureSwipe::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(14, 165, 233, 0.2) 50%,
    transparent 100%
  );
  animation: swipeHighlight 0.5s ease-out forwards;
  pointer-events: none;
  z-index: 1;
}

@keyframes swipeHighlight {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.gesturePan {
  /* Visual feedback for pan gesture */
  transform: translate(var(--pan-x, 0), var(--pan-y, 0));
  transition: transform var(--camera-transition-fast, 150ms) ease-out;
}

.gestureRotate {
  /* Visual feedback for rotate gesture */
  transform: rotate(var(--rotation, 0deg));
  transition: transform var(--camera-transition-fast, 150ms) ease-out;
}

/* Gaming mode animation (NEW) */
@keyframes gamingPulse {
  0%, 100% {
    background: radial-gradient(circle at 50% 50%, rgba(124, 58, 237, 0.05) 0%, transparent 70%);
  }
  50% {
    background: radial-gradient(circle at 50% 50%, rgba(124, 58, 237, 0.1) 0%, transparent 70%);
  }
}

/* Focus and interaction states */
.gestureArea:focus-visible {
  outline: 2px solid var(--color-primary-500, #0ea5e9);
  outline-offset: 2px;
}

.gestureArea:active {
  background: rgba(14, 165, 233, 0.05);
}

/* Touch zones */
.gestureArea[data-touch-zone="tap"] {
  cursor: pointer;
}

.gestureArea[data-touch-zone="pinch"] {
  cursor: zoom-in;
}

.gestureArea[data-touch-zone="pan"] {
  cursor: grab;
}

.gestureArea[data-touch-zone="pan"]:active {
  cursor: grabbing;
}

/* Screen reader only text */
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Responsive design */
@media (max-width: 768px) {
  .gestureArea {
    /* Mobile optimizations */
    touch-action: none;
  }
  
  .gestureIndicator {
    /* Larger indicator on mobile */
    padding: 16px 20px;
    font-size: var(--font-size-base, 16px);
  }
  
  .gestureIndicatorIcon {
    font-size: var(--font-size-xl, 20px);
  }
  
  /* Hide desktop-specific elements on mobile */
  .contextMenu {
    display: none;
  }
  
  .zoomIndicator {
    display: none;
  }
  
  .precisionGrid {
    display: none;
  }
}

/* Desktop-specific optimizations */
@media (min-width: 1024px) {
  .gestureArea.desktopEnhanced {
    /* Enhanced desktop interactions */
    cursor: crosshair;
  }
  
  .gestureArea.desktopEnhanced:hover {
    /* Subtle hover indication */
    background: rgba(14, 165, 233, 0.02);
  }
  
  .gestureArea.desktopEnhanced[data-gesture-enabled="true"] {
    /* Active gesture area styling */
    border: 1px dashed rgba(14, 165, 233, 0.2);
  }
  
  .gestureArea.desktopEnhanced[data-gesture-enabled="true"]:hover {
    border-color: rgba(14, 165, 233, 0.4);
  }
  
  /* Desktop keyboard navigation */
  .gestureArea.desktopEnhanced:focus-visible {
    outline: 2px solid var(--color-primary-500, #0ea5e9);
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba(14, 165, 233, 0.2);
  }
  
  /* Desktop precision mode */
  .gestureArea.desktopEnhanced.precisionMode {
    cursor: crosshair;
  }
  
  .gestureArea.desktopEnhanced.precisionMode:hover {
    background: rgba(14, 165, 233, 0.05);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .gestureArea {
    border: 1px solid;
  }
  
  .gestureIndicator {
    background: var(--color-gray-900, #111827);
    border: 2px solid var(--color-white, #ffffff);
  }
  
  .contextMenu {
    border: 2px solid var(--color-gray-900, #111827);
  }
  
  .contextMenuItem:focus-visible {
    outline: 3px solid;
    outline-offset: -3px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .gestureArea {
    animation: none;
    transition: none;
  }
  
  .gestureArea * {
    animation: none;
    transition: none;
  }
  
  .gestureIndicator {
    animation: none;
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  
  .contextMenu {
    animation: none;
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  
  .zoomIndicator {
    animation: none;
    opacity: 1;
    transform: translateX(0);
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .gestureArea.desktopEnhanced {
    scrollbar-color: rgba(255, 255, 255, 0.3) transparent;
  }
  
  .gestureArea.desktopEnhanced::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
  }
  
  .gestureArea.desktopEnhanced::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }
  
  .contextMenu {
    background: var(--color-gray-800, #1f2937);
    border-color: var(--color-gray-700, #374151);
  }
  
  .contextMenuItem {
    color: var(--color-gray-200, #e5e7eb);
  }
  
  .contextMenuItem:hover {
    background: var(--color-gray-700, #374151);
  }
  
  .contextMenuItem:focus-visible {
    background: var(--color-primary-900, #1e3a8a);
  }
  
  .contextMenuLabel {
    color: var(--color-gray-100, #f3f4f6);
  }
  
  .contextMenuShortcut {
    background: var(--color-gray-700, #374151);
    color: var(--color-gray-300, #d1d5db);
    border-color: var(--color-gray-600, #4b5563);
  }
}

/* Advanced Gesture Features (NEW) */
.gestureArea.advancedGestures {
  /* Enhanced gesture recognition area */
  position: relative;
  overflow: visible;
}

.gestureArea.forceTouchEnabled {
  /* Force touch capable area */
  transition: all var(--camera-transition-fast, 150ms) ease-out;
}

/* Force Touch Indicators (NEW) */
.forceTouchIndicator {
  position: absolute;
  top: 16px;
  left: 16px;
  
  background: rgba(0, 0, 0, 0.8);
  color: var(--color-white, #ffffff);
  padding: 8px 12px;
  border-radius: var(--border-radius-md, 8px);
  
  display: flex;
  flex-direction: column;
  gap: 4px;
  
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  
  z-index: 15;
  pointer-events: none;
  
  opacity: 0;
  transform: translateX(-20px);
  animation: forceTouchFadeIn 0.2s ease-out forwards;
}

@keyframes forceTouchFadeIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.forceLevel {
  font-size: var(--font-size-xs, 12px);
  font-weight: var(--font-weight-bold, 700);
  text-align: center;
  margin-bottom: 2px;
}

.forceBar {
  width: 60px;
  height: 4px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: var(--border-radius-sm, 4px);
  overflow: hidden;
  position: relative;
}

.forceProgress {
  height: 100%;
  background: var(--color-primary-400, #38bdf8);
  border-radius: var(--border-radius-sm, 4px);
  transition: width var(--camera-transition-fast, 150ms) ease-out;
  
  /* Gradient effect for different force levels */
  background: linear-gradient(90deg, 
    var(--color-yellow-400, #fbbf24) 0%, 
    var(--color-orange-400, #fb923c) 50%, 
    var(--color-red-400, #f87171) 100%);
}

/* Force level states */
.gestureArea.forceLight {
  background: radial-gradient(circle at center, rgba(251, 191, 36, 0.1) 0%, transparent 70%);
}

.gestureArea.forceMedium {
  background: radial-gradient(circle at center, rgba(251, 146, 60, 0.15) 0%, transparent 70%);
}

.gestureArea.forceHeavy {
  background: radial-gradient(circle at center, rgba(248, 113, 113, 0.2) 0%, transparent 70%);
}

/* Circular Gesture Indicator (NEW) */
.circularGestureIndicator {
  position: absolute;
  border: 2px solid var(--color-primary-400, #38bdf8);
  border-radius: 50%;
  background: rgba(14, 165, 233, 0.1);
  
  display: flex;
  align-items: center;
  justify-content: center;
  
  pointer-events: none;
  z-index: 10;
  
  opacity: 0;
  transform: scale(0.8);
  animation: circularGestureFadeIn 0.3s ease-out forwards;
}

@keyframes circularGestureFadeIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.circularProgress {
  font-size: var(--font-size-2xl, 24px);
  color: var(--color-primary-500, #0ea5e9);
  animation: circularRotate 1s ease-in-out infinite;
}

@keyframes circularRotate {
  0%, 100% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
}

/* Multi-Touch Indicator (NEW) */
.multiTouchIndicator {
  position: absolute;
  top: 16px;
  right: 16px;
  
  background: rgba(0, 0, 0, 0.8);
  color: var(--color-white, #ffffff);
  padding: 6px 12px;
  border-radius: var(--border-radius-md, 8px);
  
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-semibold, 600);
  text-align: center;
  
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  
  z-index: 15;
  pointer-events: none;
  
  opacity: 0;
  transform: translateY(-10px);
  animation: multiTouchFadeIn 0.2s ease-out forwards;
}

@keyframes multiTouchFadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Advanced Gesture State Styles (NEW) */
.gestureTripleTap::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80px;
  height: 80px;
  background: rgba(14, 165, 233, 0.5);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: tripleTapRipple 0.6s ease-out forwards;
  pointer-events: none;
  z-index: 2;
}

@keyframes tripleTapRipple {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  33% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0.8;
  }
  66% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0.4;
  }
  100% {
    transform: translate(-50%, -50%) scale(2.5);
    opacity: 0;
  }
}

.gestureForceTouch {
  /* Force touch gesture active state */
  background: radial-gradient(circle at center, rgba(248, 113, 113, 0.2) 0%, transparent 70%);
  animation: forceTouchPulse 0.5s ease-in-out infinite;
}

@keyframes forceTouchPulse {
  0%, 100% {
    background: radial-gradient(circle at center, rgba(248, 113, 113, 0.2) 0%, transparent 70%);
  }
  50% {
    background: radial-gradient(circle at center, rgba(248, 113, 113, 0.3) 0%, transparent 70%);
  }
}

.gestureCircularPan {
  /* Circular pan gesture active state */
  position: relative;
}

.gestureCircularPan::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  border: 3px solid var(--color-primary-400, #38bdf8);
  border-radius: 50%;
  border-top-color: transparent;
  transform: translate(-50%, -50%);
  animation: circularPanRotate 1s linear infinite;
  pointer-events: none;
  z-index: 1;
}

@keyframes circularPanRotate {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.gestureThreeFingerSwipe {
  /* Three finger swipe gesture active state */
  position: relative;
  overflow: hidden;
}

.gestureThreeFingerSwipe::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(14, 165, 233, 0.3) 25%,
    rgba(14, 165, 233, 0.4) 50%,
    rgba(14, 165, 233, 0.3) 75%,
    transparent 100%
  );
  animation: threeFingerSwipeHighlight 0.6s ease-out forwards;
  pointer-events: none;
  z-index: 1;
}

@keyframes threeFingerSwipeHighlight {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.gestureEdgeSwipe {
  /* Edge swipe gesture active state */
  position: relative;
}

.gestureEdgeSwipe::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to right,
    rgba(14, 165, 233, 0.3) 0%,
    transparent 20%,
    transparent 80%,
    rgba(14, 165, 233, 0.3) 100%
  );
  animation: edgeSwipeGlow 0.5s ease-out forwards;
  pointer-events: none;
  z-index: 1;
}

@keyframes edgeSwipeGlow {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Gesture Sequence Indicator (NEW) */
.gestureSequence {
  position: relative;
}

.gestureSequence::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 120px;
  height: 120px;
  border: 4px solid var(--color-primary-400, #38bdf8);
  border-radius: 50%;
  border-style: dashed;
  transform: translate(-50%, -50%);
  animation: gestureSequencePulse 2s ease-in-out infinite;
  pointer-events: none;
  z-index: 1;
}

@keyframes gestureSequencePulse {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.6;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.1);
    opacity: 1;
  }
}

/* Enhanced gesture visual feedback */
.gestureIndicator {
  /* Update existing gesture indicator with enhanced styling */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  
  background: rgba(0, 0, 0, 0.85);
  color: var(--color-white, #ffffff);
  padding: 12px 16px;
  border-radius: var(--border-radius-lg, 12px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  
  display: flex;
  align-items: center;
  gap: 8px;
  
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-medium, 500);
  
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  
  z-index: 20;
  pointer-events: none;
  
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.9);
  animation: enhancedGestureIndicatorFadeIn 0.25s ease-out forwards;
  
  /* Add subtle glow effect */
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.3),
    0 0 0 1px rgba(255, 255, 255, 0.1),
    0 0 20px rgba(14, 165, 233, 0.2);
}

@keyframes enhancedGestureIndicatorFadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.gestureIndicatorIcon {
  font-size: var(--font-size-lg, 18px);
  line-height: 1;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
}

.gestureIndicatorText {
  text-transform: capitalize;
  white-space: nowrap;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

/* Enhanced touch zones with advanced features */
.gestureArea[data-touch-zone="force-touch"] {
  cursor: pointer;
  background: radial-gradient(circle at center, rgba(248, 113, 113, 0.05) 0%, transparent 70%);
}

.gestureArea[data-touch-zone="circular"] {
  cursor: crosshair;
  background: 
    radial-gradient(circle at center, transparent 30px, rgba(14, 165, 233, 0.05) 30px, transparent 200px);
}

.gestureArea[data-touch-zone="edge"] {
  background: linear-gradient(
    to right,
    rgba(14, 165, 233, 0.05) 0%,
    transparent 20px,
    transparent calc(100% - 20px),
    rgba(14, 165, 233, 0.05) 100%
  );
}

/* Mobile responsiveness for advanced features */
@media (max-width: 768px) {
  .forceTouchIndicator {
    /* Smaller force touch indicator on mobile */
    top: 12px;
    left: 12px;
    padding: 6px 10px;
  }
  
  .multiTouchIndicator {
    /* Smaller multi-touch indicator on mobile */
    top: 12px;
    right: 12px;
    padding: 4px 8px;
    font-size: var(--font-size-xs, 12px);
  }
  
  .circularGestureIndicator {
    /* Scale down circular indicators on mobile */
    border-width: 1px;
  }
  
  .circularProgress {
    font-size: var(--font-size-lg, 18px);
  }
  
  .gestureIndicator {
    /* Enhanced mobile gesture indicator */
    padding: 14px 18px;
    font-size: var(--font-size-base, 16px);
    border-radius: var(--border-radius-xl, 16px);
  }
  
  .gestureIndicatorIcon {
    font-size: var(--font-size-xl, 20px);
  }
}

/* Desktop enhancements for advanced gestures */
@media (min-width: 1024px) {
  .gestureArea.advancedGestures {
    /* Enhanced desktop gesture area */
    border: 1px dashed rgba(14, 165, 233, 0.1);
    transition: border-color var(--camera-transition-fast, 150ms) ease-out;
  }
  
  .gestureArea.advancedGestures:hover {
    border-color: rgba(14, 165, 233, 0.3);
  }
  
  .gestureArea.advancedGestures.forceTouchEnabled:hover {
    background: radial-gradient(circle at center, rgba(248, 113, 113, 0.02) 0%, transparent 70%);
  }
  
  .forceTouchIndicator {
    /* Enhanced desktop force touch indicator */
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .multiTouchIndicator {
    /* Enhanced desktop multi-touch indicator */
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

/* High contrast mode support for advanced features */
@media (prefers-contrast: high) {
  .forceTouchIndicator {
    background: var(--color-gray-900, #111827);
    border: 2px solid var(--color-white, #ffffff);
    color: var(--color-white, #ffffff);
  }
  
  .multiTouchIndicator {
    background: var(--color-gray-900, #111827);
    border: 2px solid var(--color-white, #ffffff);
    color: var(--color-white, #ffffff);
  }
  
  .circularGestureIndicator {
    border: 3px solid var(--color-white, #ffffff);
    background: var(--color-gray-900, #111827);
  }
  
  .gestureIndicator {
    background: var(--color-gray-900, #111827);
    border: 2px solid var(--color-white, #ffffff);
    box-shadow: none;
  }
}

/* Reduced motion support for advanced features */
@media (prefers-reduced-motion: reduce) {
  .forceTouchIndicator {
    animation: none;
    opacity: 1;
    transform: translateX(0);
  }
  
  .circularGestureIndicator {
    animation: none;
    opacity: 1;
    transform: scale(1);
  }
  
  .multiTouchIndicator {
    animation: none;
    opacity: 1;
    transform: translateY(0);
  }
  
  .circularProgress {
    animation: none;
  }
  
  .gestureIndicator {
    animation: none;
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  
  /* Disable all gesture animation effects */
  .gestureTripleTap::after,
  .gestureForceTouch,
  .gestureCircularPan::before,
  .gestureThreeFingerSwipe::before,
  .gestureEdgeSwipe::after,
  .gestureSequence::before {
    animation: none;
  }
}

/* Dark mode support for advanced features */
@media (prefers-color-scheme: dark) {
  .forceTouchIndicator {
    background: rgba(17, 24, 39, 0.9);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .multiTouchIndicator {
    background: rgba(17, 24, 39, 0.9);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .gestureIndicator {
    background: rgba(17, 24, 39, 0.9);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  .forceBar {
    background: rgba(255, 255, 255, 0.2);
  }
  
  .circularGestureIndicator {
    background: rgba(17, 24, 39, 0.8);
    border-color: var(--color-primary-400, #38bdf8);
  }
} 